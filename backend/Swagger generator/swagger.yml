swagger: '2.0'
info:
  description: Microservicio consumo AWS
  version: 1.0.0
  title: Prueba con AWS Dynamo DB, Cognito y Lambda
  contact:
    email: mauricio.ramirez1@udea.edu.co
host: 'localhost:8090'
basePath: /Authentication
paths:
  /login:
    post:
      tags:
        - authentication-service-api-controller
      summary: Petición de login por medio de AWS
      description: Microservicio que consume Dynamo y Cognito con apache camel 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: Inquery step success
          schema:
            $ref: '#/definitions/AuthenticationLoginResponse'
        '401':
          description: Invalid credentials. user or password are invalid
          schema:
            $ref: '#/definitions/JsonApiBodyResponseErrors'
  /register:
    post:
      tags:
        - authentication-service-api-controller
      summary: Petición de registro por medio de AWS
      description: Microservicio que consume Dynamo y Cognito con apache camel 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/RegisterRequest'
      responses:
        '200':
          description: Inquery step success
          schema:
            $ref: '#/definitions/AuthenticationRegisterResponse'
        '409':
          description: Conflict registering. User already exists
          schema:
            $ref: '#/definitions/JsonApiBodyResponseErrors'
definitions:
  LoginRequest:
    type: object
    required:
      - header
      - credentials
    properties:
      header:
        $ref: '#/definitions/Header'
      credentials:
        $ref: '#/definitions/Credentials'
  RegisterRequest:
    type: object
    required:
      - header
      - userParameters
    properties:
      header:
        $ref: '#/definitions/Header'
      userParameters:
        $ref: '#/definitions/UserParameters'
  Header:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
      type:
        type: string
  Credentials:
    type: object
    required:
      - user
      - password
    properties:
      user:
        type: string
      password:
        type: string
  UserParameters:
    type: object
    required:
      - firstName
      - lastName
      - email
      - password
      - phoneNumber
      - role
      - verificationCode
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      role: 
        type: string
      verificationCode: 
        type: number
  JsonApiBodyResponseErrors:
    type: object
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorDetail'
  ErrorDetail:
    type: object
    required:
      - code
      - detail
      - id
      - source
      - status
      - title
    properties:
      code:
        type: string
      detail:
        type: string
      id:
        type: string
      source:
        type: string
      status:
        type: string
      title:
        type: string
  AuthenticationLoginResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/LoginResponse'
  LoginResponse:
    type: object
    required:
      - success
      - tokenId
    properties:
      success:
        type: boolean
      tokenId:
        type: string
  AuthenticationRegisterResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/RegisterResponse'
  RegisterResponse:
    type: object
    required:
      - success
    properties:
      success:
        type: boolean